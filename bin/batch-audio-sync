#!/usr/bin/python

# audio-offset-finder
#
# Copyright (c) 2014 British Broadcasting Corporation
# Copyright (c) 2018 Abram Hindle
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from audio_offset_finder.audio_offset_finder import BatchOffsetFinder
import argparse, sys, os

def parse_paths(paths):
    full_paths = [os.path.join(os.getcwd(), path) for path in paths]
    files = set()
    for path in full_paths:
        if os.path.isfile(path):
            files.add(path)

    return files

def main():
    parser = argparse.ArgumentParser(
        description="Find the offset of an audio file within another one", 
        formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )
    parser.add_argument('--find-offset-of', nargs='+', metavar='audio file', type=str, help='Find the offset of file(s)')
    parser.add_argument('--within', nargs='+', metavar='audio file', type=str, help='Within file(s)')
    parser.add_argument('--sr', metavar='sample rate', type=int, default=16000, help='Target sample rate during downsampling')
    parser.add_argument('--trim', metavar='seconds', type=int, default=60*30, help='Only uses first n seconds of audio files')
    parser.add_argument('--plotit',action='store_true', help='Plot the correlation function')
    parser.add_argument('--ffmpeg',action='store_true', help='Run FFMPEG and make a synced copy')
    args = parser.parse_args()
    if not (args.find_offset_of or args.within):
        parser.error("Please input audio files")
    if not (args.find_offset_of or args.find_offset_of):
        parser.error("Please input audio files")

    find_files = parse_paths(args.find_offset_of)
    within_files = parse_paths(args.within)

    batch = BatchOffsetFinder(within_files, args.sr, args.trim)
    for find_file in find_files:
        filename, offset, score = batch.find_offset(find_file)
        print("Find: %s" % str(find_file))
        print("Filename: %s" % str(filename))
        print("Offset: %s (seconds)" % str(offset))
        print("Standard score: %s" % str(score))

        out_file = "%s.sync.%s.mkv" % (find_file, ("{:.2f}".format(offset)))
        ffmpeg_cmd = "ffmpeg -i '%s' -ss  '%s' -i %s -map 0:v -map 1:a -map 0:a -metadata:s:a:0 language=eng -disposition:a:0 default -c copy -map_metadata 0 -shortest '%s'" % (find_file, offset, filename, out_file)
        print(ffmpeg_cmd)
        if (args.ffmpeg):
            os.system(ffmpeg_cmd)
            stat = os.stat(find_file)
            os.utime(out_file, (stat.st_mtime, stat.st_mtime))

if __name__ == '__main__':
    main()
